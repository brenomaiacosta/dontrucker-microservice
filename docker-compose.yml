version: '3.8'

services:
  dt-mongo-database:
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - '27017:27017'
    volumes:
      - D:\Resources\MongoDB\Volumes:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - dt-network
  dt-mongo-express:
    image: mongo-express
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: dt-mongo-database
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
    links:
      - dt-mongo-database
    networks:
      - dt-network
    depends_on:
      - dt-mongo-database
  dt-discovery-service:
    networks:
      - dt-network
    build:
      context: dt-discovery-service
      dockerfile: Dockerfile
    ports:
      - '8101:8101'
  dt-gateway-service:
    networks:
      - dt-network
    build:
      context: dt-gateway-service
      dockerfile: Dockerfile
    ports:
      - '8100:8100'
    depends_on:
      - dt-discovery-service
  dt-itemoffer-service:
    networks:
      - dt-network
    build:
      context: dt-itemoffer-service
      dockerfile: Dockerfile
    ports:
      - '8200:8200'
    depends_on:
      - dt-discovery-service
  dt-offer-service:
    networks:
      - dt-network
    build:
      context: dt-offer-service
      dockerfile: Dockerfile
    ports:
      - '8201:8201'
    depends_on:
      - dt-discovery-service
  dt-user-service:
    networks:
      - dt-network
    build:
      context: dt-user-service
      dockerfile: Dockerfile
    ports:
      - '8202:8202'
    depends_on:
      - dt-discovery-service

networks:
  dt-network: